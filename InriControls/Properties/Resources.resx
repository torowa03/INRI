<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cancel" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>